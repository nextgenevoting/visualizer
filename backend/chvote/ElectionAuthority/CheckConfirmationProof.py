import unittest
import os, sys
from gmpy2 import mpz
import gmpy2

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from chvote.Common.SecurityParams import SecurityParams, secparams_l0, secparams_l3
from chvote.Utils.Utils           import AssertClass
from chvote.Common.GetNIZKPChallenge   import GetNIZKPChallenge

def CheckConfirmationProof(pi, y_hat, secparams):
    """
    Algorithm 7.36: Checks the correctness of a NIZKP pi generated by Alg. 7.33.
    The public value of this proof is the public confirmation credential y_hat.

    Args:
        pi:                                  The NIZKP to check
        y_hat:                               The public confirmation credential
        secparams (SecurityParams):          Collection of public security parameters

    Returns:
        bool:                                True if the NIZKP is correct, False otherwise.
    """

    AssertClass(secparams, SecurityParams)

    (t, s) = pi
    c = GetNIZKPChallenge(y_hat, t, secparams.tau, secparams)
    t_prime = (gmpy2.powmod(y_hat,-c,secparams.p_hat) * gmpy2.powmod(secparams.g_hat,s, secparams.p_hat)) % secparams.p_hat

    return t == t_prime

class CheckConfirmationProofTest(unittest.TestCase):
    def testCheckConfirmationProof(self):
        # Testing is done with integration tests
        self.assertTrue(True)

if __name__ == '__main__':
    unittest.main()
