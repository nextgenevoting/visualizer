import unittest
import os, sys
from gmpy2 import mpz
import gmpy2

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from Crypto.SecurityParams import SecurityParams, secparams_default, secparams_l0, secparams_l3
from Utils.Utils           import AssertClass

def CheckConfirmationProof(pi, y_hat, secparams=secparams_default):
    """
    Algorithm 7.36: Checks the correctness of a NIZKP pi generated by Alg. 7.33.
    The public value of this proof is the public confirmation credential y_hat.

    Args:
        pi:     The NIZKP to check
        y_hat:  The public confirmation credential

    Returns:
        bool    True if the NIZKP is correct, False otherwise.
    """

    AssertClass(secparams, SecurityParams)

    (t, s) = pi
    c = GetNIZKPChallenge(y_hat, t, secparams.q_hat)
    t_ = ((y_hat ** -c) * (g_hat ** s)) % secparams.p_hat

    return t == t_

class CheckConfirmationProofTest(unittest.TestCase):
    def testCheckConfirmationProof(self):
        self.assertTrue(False)

if __name__ == '__main__':
    unittest.main()
