import unittest
import os, sys
import gmpy2
from gmpy2 import mpz

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from Utils.Utils            import Truncate, AssertMpz
from Utils.ToInteger        import ToInteger
from Utils.RecHash          import RecHash
from Crypto.SecurityParams  import secparams_default, secparams_l0, secparams_l3

def GetPublicCredentials(D_hat, N, secparams = secparams_default):
    """
    Algorithm 7.12: Computes lists x^ and y^ of public voter credentials, which are obtained by
    multiplying corresponding values from the public parts of electorate data generated by the authorities.

    Args:
       D_hat (tuple):      Contains s public voter parameter entries (d_hat_j)

    Returns:
       tuple:    (x_hat, y_hat), Public data
    """

    x_hat = []
    y_hat = []
    for i in range (N):  # loop over N (voters)
        x_hat_i = mpz(1)
        y_hat_i = mpz(1)
        for j in range(secparams_default.s): # loop over s (authorities)
            x_hat_i *= D_hat[j][i][0] # multiply all x values
            y_hat_i *= D_hat[j][i][1] # multiply all y values

        x_hat.append(x_hat_i % secparams.p_hat)
        y_hat.append(y_hat_i % secparams.p_hat)
    return (x_hat, y_hat)
